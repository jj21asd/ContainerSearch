plugins {
    id 'common_process_resources'
    id 'com.gradleup.shadow'
}

loom {
    forge {
        mixinConfig "container_search.mixins.json"
        mixinConfig "container_search.forge.mixins.json"
    }
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }

    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

dependencies {
    forge "net.minecraftforge:forge:${forge_version}"
    modImplementation include("maven.modrinth:midnightlib:${midnight_lib_version_forge}")

    // Compatible mods
    modCompileOnly "curse.maven:iron-chests-228756:${iron_chests_file_id}"
    if (load_compatible_mods) {
        modRuntimeOnly "curse.maven:iron-chests-228756:${iron_chests_file_id}"
    }

    // ShulkerBoxTooltip (useful for testing with shulkerboxes)
    modRuntimeOnly "maven.modrinth:shulkerboxtooltip:${shulkerboxtooltip_version_forge}"
    modRuntimeOnly "me.shedaniel.cloth:cloth-config-forge:${cloth_config_version}"

    common(project(path: ':common', configuration: 'namedElements')) { transitive = false }
    shadowBundle project(path: ':common', configuration: 'transformProductionForge')
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    inputFile.set shadowJar.archiveFile as Provider<? extends RegularFile>
}
